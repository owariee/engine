cmake_minimum_required(VERSION 3.22)

project(application VERSION 1.0.0)
project(celestia VERSION 1.0.0)

set(CMAKE_EXPORT_COMPILE_COMMANDS ON CACHE INTERNAL "") # works
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CXX_EXTENSIONS OFF)

find_package(PkgConfig REQUIRED)

pkg_check_modules(GLFW REQUIRED glfw3)
add_library(glfw INTERFACE)
target_link_libraries(glfw INTERFACE ${GLFW_LINK_LIBRARIES})

pkg_check_modules(VULKAN REQUIRED vulkan)
add_library(vulkan INTERFACE)
target_link_libraries(vulkan INTERFACE ${VULKAN_LINK_LIBRARIES})

# pkg_check_modules(GLM REQUIRED glm)
find_package(glm REQUIRED)
# add_library(glm INTERFACE)
# target_link_libraries(glm INTERFACE ${GLM_LINK_LIBRARIES})
# target_include_directories(glm INTERFACE ${GLM_INCLUDE_DIRS})
# target_compile_options(glm INTERFACE ${GLM_CFLAGS_OTHER})

add_executable(
                celestia
                main.cpp
                GLFWWindow.cpp 
                VulkanInstance.cpp
                VKQFamily.cpp
                VKPDev.cpp
               )
target_compile_definitions(celestia PRIVATE
    APPLICATION_NAME="cringe"
    APPLICATION_VERSION_MAJOR=1
    APPLICATION_VERSION_MINOR=0
    APPLICATION_VERSION_PATCH=0
    ENGINE_NAME="${PROJECT_NAME}"
    ENGINE_VERSION_MAJOR=${PROJECT_VERSION_MAJOR}
    ENGINE_VERSION_MINOR=${PROJECT_VERSION_MINOR}
    ENGINE_VERSION_PATCH=${PROJECT_VERSION_PATCH}
    GLFW_INCLUDE_VULKAN)
target_link_libraries(celestia PRIVATE glfw vulkan glm::glm)
target_include_directories(celestia PUBLIC ./)
